void masterprint (const char *template, ...);
void mastererr (const char *template, ...);
real GetGlobalIFrac ();
void prs_exit ();
void erreur();
void message ();
PolarGrid    *CreatePolarGrid();
PolarGrid1D *CreatePolarGrid1D();
void MultiplyPolarGridbyConstant ();
void MultiplyPolarGridbyConstant1D ();
void DumpSources ();
Force ComputeForce ();
void UpdateLog ();
void ReadfromFile ();
void InitLabel ();
void Initialization2D1D ();
void ReadfromFile1D ();
void InitLabel1D ();
void var();
void ReadVariables();
void PrintUsage ();
real TellNbOrbits ();
real TellNbOutputs ();
void TellEverything ();
void GiveTimeInfo ();
void InitSpecificTime ();
void GiveSpecificTime ();
void EmptyPlanetSystemFile ();
void WritePlanetFile ();
void WritePlanetSystemFile ();
void WriteBigPlanetFile ();
void WriteBigPlanetSystemFile ();
real GetfromPlanetFile ();
void RestartPlanetarySystem ();
void WriteDiskPolar();
void WriteDiskPolar1D();
void WriteDim ();
void WriteDim1D ();
void SendOutput2D1D ();
void Write1DSummary();
void Write1DWeightedSummary();
void BarycenterConservation();
void FillForcesArrays ();
void FillPotplanet ();
Pair FeltByDisk ();
void FillForcesArrays1D ();
void AdvanceSystemFromDisk ();
void AdvanceSystemFromDisk1D ();
void AdvanceSystemRK5 ();
void SolveOrbits ();
real ConstructSequence ();
void InitGas ();
void InitGas1D ();
void AccreteOntoPlanets ();
void FindOrbitalElements ();
int FindNumberOfPlanets ();
PlanetarySystem *AllocPlanetSystem ();
void FreePlanetary ();
PlanetarySystem *InitPlanetarySystem ();
void ListPlanets ();
real GetPsysInfo ();
void RotatePsys ();
void DerivMotionRK5 ();
void TranslatePlanetRK5 ();
void RungeKunta ();
real GasTotalMass ();
real GasTotalMass1D ();
real GasMomentum ();
real GasMomentum1D ();
void DivisePolarGrid ();
void DivisePolarGrid1D ();
void InitComputeAccel ();
void OpenBoundary ();
void OpenBoundary1D ();
void NonReflectingBoundary ();
void ApplyOuterSourceMass ();
void ApplyOuterSourceMass1D ();
void ApplyBoundaryCondition ();
void ApplyBoundaryCondition1D ();
void CorrectVtheta ();
void CorrectVtheta1D ();
boolean DetectCrash2D1D ();
void FillPolar1DArrays2D1D ();
void InitEuler2D1D ();
real min2 ();
real max2 ();
void ActualiseGas ();
void ActualiseGas1D ();
void AlgoGas2D1D ();
void SubStep1 ();
void SubStep1_1D ();
void SubStep2 ();
void SubStep2_1D ();
int ConditionCFL ();
int ConditionCFL1D ();
real Sigma();
void FillSigma();
void FillSigma1D();
void RefillSigma ();
void RefillSigma1D ();
void Transport ();
void Transport1D ();
void OneWindRad ();
void OneWindRad1D ();
void ComputeThetaElongations ();
void ComputeAverageThetaVelocities ();
void ComputeResiduals ();
void ComputeConstantResidual ();
void AdvectSHIFT ();
void OneWindTheta ();
void QuantitiesAdvection ();
void ComputeExtQty ();
void ComputeExtQty1D ();
void ComputeSpeQty ();
void ComputeSpeQty1D ();
void InitTransport () ;
void InitTransport1D () ;
void ComputeStarRad ();
void ComputeStarRad1D ();
void ComputeStarTheta ();
void ComputeLRMomenta ();
void ComputeLRMomenta1D ();
void ComputeVelocities ();
void ComputeVelocities1D ();
real VanLeerRadial ();
real VanLeerRadial1D ();
void Tartinage ();
void VanLeerTheta ();
void InitViscosity ();
void InitViscosity1D ();
void ViscousTerms ();
void ViscousTerms1D ();
void AllocateComm ();
void CommunicateBoundaries ();
void InitCompute1DGhostsVr ();
void Compute1DGhostsVr ();
void Communicate1D2D ();
void handfpe();
void setfpe ();
void merge ();
void ReadPrevDim ();
void ReadPrevDim1D ();
void CheckRebin ();
void CheckRebin1D ();
void SplitDomain ();
void InitVariables();
