/** \file proto.h

Declaration of all the functions of the FARGO code

*/

void masterprint (const char *template, ...);
void mastererr (const char *template, ...);
real GetGlobalIFrac ();
void prs_exit ();
void prs_error();
void message ();
void AddMass ();
PolarGrid    *CreatePolarGrid();
void MultiplyPolarGridbyConstant ();
void DumpSources ();
Force ComputeForce ();
void UpdateLog ();
void ReadfromFile ();
void InitLabel ();
void Initialization ();
void var();
void ReadVariables();
void PrintUsage ();
real TellNbOrbits ();
real TellNbOutputs ();
void TellEverything ();
void GiveTimeInfo ();
void InitSpecificTime ();
void GiveSpecificTime ();
void EmptyPlanetSystemFile ();
void WritePlanetFile ();
void WritePlanetSystemFile ();
void WriteBigPlanetFile ();
void WriteBigPlanetSystemFile ();
real GetfromPlanetFile ();
void RestartPlanetarySystem ();
void WriteDiskPolar();
void WriteDim ();
void SendOutput ();
void SendOutputd ();
void ComputeIndirectTerm ();
void FillForcesArrays ();
void AdvanceSystemFromDisk ();
void AdvanceSystemRK5 ();
void SolveOrbits ();
real ConstructSequence ();
void InitGas ();
void AccreteOntoPlanets ();
void FindOrbitalElements ();
int FindNumberOfPlanets ();
PlanetarySystem *AllocPlanetSystem ();
void FreePlanetary ();
PlanetarySystem *InitPlanetarySystem ();
void ListPlanets ();
real GetPsysInfo ();
void RotatePsys ();
void DerivMotionRK5 ();
void TranslatePlanetRK5 ();
void RungeKunta ();
real GasTotalMass ();
real GasMomentum ();
void DivisePolarGrid ();
void InitComputeAccel ();
Pair ComputeAccel ();
void OpenBoundary ();
void OpenBoundaryd ();
void NonReflectingBoundary ();
void ApplyOuterSourceMass ();
void ApplyBoundaryCondition ();
void CorrectVtheta ();
boolean DetectCrash ();
void FillPolar1DArrays ();
void InitEuler ();
real min2 ();
real max2 ();
void ActualiseGas ();
void AlgoGas ();
void SFTAvelocity ();
void SFTAtest ();
void SubStep1 ();
void SubStep2 ();
void Diffd ();
long ConditionCFL ();
real Sigma();
real DSigma();
void FillSigma();
void RefillSigma ();
void Transport ();
void Transportd ();
void OneWindRad ();
void OneWindRadd ();
void ComputeThetaElongations ();
void ComputeAverageThetaVelocities ();
void ComputeResiduals ();
void ComputeConstantResidual ();
void AdvectSHIFT ();
void OneWindTheta ();
void OneWindThetad ();
void QuantitiesAdvection ();
void QuantitiesAdvectiond ();
void ComputeExtQty ();
void ComputeSpeQty ();
void InitTransport () ;
void ComputeStarRad ();
void ComputeStarTheta ();
void ComputeLRMomenta ();
void ComputeVelocities ();
real VanLeerRadial ();
void VanLeerTheta ();
real VanLeerRadiald ();
real VanLeerRadialdd ();
void VanLeerThetad ();
void InitViscosity ();
void ViscousTerms ();
void AllocateComm ();
void CommunicateBoundaries ();
void handfpe();
void setfpe ();
void merge ();
void merged ();
void ReadPrevDim ();
void CheckRebin ();
void SplitDomain ();
void InitVariables();
real FViscosity ();
real DFViscosity ();
real AspectRatio ();
real DAspectRatio ();
Force ComputeForceStockholm ();
void UpdateLogStockholm ();
Pair MassInOut ();
void StockholmBoundary ();
void MakeDir ();
FILE *fopenp ();
